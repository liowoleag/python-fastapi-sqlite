# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.env.development
.env.test
.env.production
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore the entire .idea directory.
.idea/

# Visual Studio Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ===== PROJECT SPECIFIC =====

# Database files
*.db
*.sqlite
*.sqlite3
users.db
users_*.db
*.db-journal
*.db-wal
*.db-shm

# Backup files
*_backup_*.db
backup/
backups/

# Log files
*.log
logs/
app.log
access.log
error.log
uvicorn.log

# Docker
.dockerignore
docker-compose.override.yml
docker-compose.local.yml

# FastAPI specific
.pytest_cache/
.coverage
htmlcov/

# Alembic (database migrations)
alembic/versions/*.py
!alembic/versions/__init__.py

# Temporary files
temp/
tmp/
.tmp/

# SSL certificates
*.pem
*.key
*.crt
*.cert
*.p12
*.pfx

# Configuration files with secrets
config.ini
settings.ini
secrets.json
.secrets

# Upload directories
uploads/
media/
static/user_uploads/

# Cache directories
.cache/
cache/

# IDE and editor files
*.swp
*.swo
.vscode/settings.json
.vscode/launch.json
.idea/workspace.xml
.idea/tasks.xml

# OS generated files
.DS_Store?
ehthumbs.db
Icon?
Thumbs.db

# Jupyter Notebook checkpoints
.ipynb_checkpoints/

# pytest
.pytest_cache/
.coverage
htmlcov/
.tox/

# mypy
.mypy_cache/

# Local development
local_settings.py
dev_settings.py

# Documentation builds
docs/_build/
site/

# Profiling
*.prof

# Memory dumps
*.hprof
*.dump

# Application specific
data/
storage/
files/

# Docker volumes data
postgres_data/
redis_data/
sqlite_data/

# Monitoring and metrics
prometheus/
grafana/

# Scripts output
output/
results/

# Development tools
.pre-commit-config.yaml
.flake8
.black
.isort.cfg

# Package files
*.tar.gz
*.zip
*.rar

# Temporary Python files
*.pyc
*.pyo
*.pyd
__pycache__/

# Virtual environments
venv*/
env*/
.env*/

# Node.js (if using any frontend tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Terraform (if using for infrastructure)
*.tfstate
*.tfstate.*
.terraform/

# Kubernetes
*.kubeconfig

# Helm
charts/*/charts/
charts/*/requirements.lock

# Local environment overrides
.env.override
.env.*.local

# Testing
test-results/
test-reports/

# Performance testing
locust/
k6/

# Security scanning
.bandit
.safety

# Linting
.pylint.d/
pylint-report.txt

# Type checking
.pyre/
.pytype/

# Documentation
docs/build/
docs/source/_build/

# Backup and temporary files
*.bak
*.backup
*.old
*.orig
*.rej
*.tmp

# Archive files
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases
*.log
*.sql
*.sqlite

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.parcel-cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# End of project specific
